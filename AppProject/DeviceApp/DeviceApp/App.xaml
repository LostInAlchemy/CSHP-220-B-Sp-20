<Application x:Class="DeviceApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">

    <Application.Resources>

        <Style TargetType="Window" x:Key="GenWindow">
            <Setter Property="Title" Value="Smarthome Device Tracker"/>
            <Setter Property="Icon" Value="/Images/WindowIcon.jpg"/>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="/Images/SmartHomeLogin.jpg" Stretch="Fill"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Menu">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontWeight" Value="Regular"/>
        </Style>

        <Style TargetType="ContextMenu">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontWeight" Value="Regular"/>
        </Style>

        <Style TargetType="MenuItem">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Blue" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="GridViewColumnHeader">
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="MinWidth" Value="30"/>
        </Style>

        <Style TargetType="ListView">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Height" Value="auto"/>
            <Setter Property="Width" Value="auto"/>
        </Style>

        <Style TargetType="ListViewItem">
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                    <Setter Property="Background" Value="DarkGray" />
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                    <Setter Property="Background" Value="LightGray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="ListViewItem" x:Key="CenterTextColumn">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <Style TargetType="TextBox" >
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="AntiqueWhite"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,3,10,0"/>
            <Setter Property="Cursor" Value="IBeam"/>
        </Style>
        
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Margin" Value="0,3,10,0"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <!--<Setter Property="Foreground" Value='Black'/>-->
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="AntiqueWhite"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0,3,10,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseCaptureWithin" Value="True">
                <Setter Property="IsDropDownOpen" Value="True"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style TargetType="Button">
            <Setter Property="Width" Value="75"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>


        <Style TargetType="TabControl">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent"/>
        </Style>

        <!--<Style TargetType="{x:Type TabItem}">
            <Setter Property="Background" Value="Aquamarine"/>
            <Style.Triggers>
                <Trigger Property="IsSelected "  Value="True">
                    <Setter Property="Background" Value="SlateGray"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>-->

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border>
                            <Grid>
                                <Grid>
                                    <Border x:Name="border" 
                                            CornerRadius="3,3,0,0"
                                            Background="WhiteSmoke"/>
                                </Grid>
                                <ContentPresenter ContentSource="Header"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="border"
                                        Property="Background"
                                        Value="LightGray" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter TargetName="border"
                                        Property="Background"
                                        Value="LightGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Application.Resources>
</Application>
